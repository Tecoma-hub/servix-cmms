{"ast":null,"code":"// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\n\n// Set base URL for axios\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\naxios.defaults.withCredentials = true;\n\n// Add request interceptor for debugging\naxios.interceptors.request.use(request => {\n  console.log('Request URL:', request.url);\n  // Ensure the Authorization header is set if we have a token\n  const token = localStorage.getItem('token');\n  if (token) {\n    request.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return request;\n});\n\n// Add response interceptor for debugging\naxios.interceptors.response.use(response => {\n  console.log('Response:', response);\n  return response;\n}, error => {\n  console.error('Axios Error:', error);\n  return Promise.reject(error);\n});\n\n// Rest of your App.js code...","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","axios","defaults","baseURL","process","env","REACT_APP_API_URL","withCredentials","interceptors","request","use","console","log","url","token","localStorage","getItem","headers","response","error","Promise","reject"],"sources":["C:/Users/USER/Desktop/servix-cmms/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// Set base URL for axios\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\naxios.defaults.withCredentials = true;\r\n\r\n// Add request interceptor for debugging\r\naxios.interceptors.request.use(request => {\r\n  console.log('Request URL:', request.url);\r\n  // Ensure the Authorization header is set if we have a token\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    request.headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  return request;\r\n});\r\n\r\n// Add response interceptor for debugging\r\naxios.interceptors.response.use(response => {\r\n  console.log('Response:', response);\r\n  return response;\r\n}, error => {\r\n  console.error('Axios Error:', error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Rest of your App.js code..."],"mappings":"AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AACrFL,KAAK,CAACC,QAAQ,CAACK,eAAe,GAAG,IAAI;;AAErC;AACAN,KAAK,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAACD,OAAO,IAAI;EACxCE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,OAAO,CAACI,GAAG,CAAC;EACxC;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTL,OAAO,CAACQ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACtD;EACA,OAAOL,OAAO;AAChB,CAAC,CAAC;;AAEF;AACAR,KAAK,CAACO,YAAY,CAACU,QAAQ,CAACR,GAAG,CAACQ,QAAQ,IAAI;EAC1CP,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEM,QAAQ,CAAC;EAClC,OAAOA,QAAQ;AACjB,CAAC,EAAEC,KAAK,IAAI;EACVR,OAAO,CAACQ,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;EACpC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}