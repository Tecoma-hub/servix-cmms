{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\servix-cmms\\\\frontend\\\\src\\\\components\\\\equipment\\\\EquipmentList.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/equipment/EquipmentList.js\nimport React, { useState, useEffect } from 'react';\nimport api from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EquipmentList = ({\n  onSelect,\n  selectedEquipmentId\n}) => {\n  _s();\n  const [equipment, setEquipment] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchEquipment = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const res = await api.get('/api/equipment');\n        setEquipment(Array.isArray(res.data.equipment) ? res.data.equipment : []);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch equipment');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEquipment();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-block h-4 w-4 animate-spin rounded-full border-2 border-solid border-teal-600 border-r-transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-sm text-gray-600\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 text-sm text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: selectedEquipmentId || '',\n    onChange: e => onSelect(e.target.value),\n    className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n    required: true,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"Select equipment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), equipment.map(equip => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: equip._id,\n      children: [equip.name, \" (\", equip.serialNumber, \") - \", equip.status]\n    }, equip._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(EquipmentList, \"7wituiIOg3lOnxXzUkTMJIQritU=\");\n_c = EquipmentList;\nexport default EquipmentList;\nvar _c;\n$RefreshReg$(_c, \"EquipmentList\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","EquipmentList","onSelect","selectedEquipmentId","_s","equipment","setEquipment","loading","setLoading","error","setError","fetchEquipment","res","get","Array","isArray","data","err","_err$response","_err$response$data","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","required","map","equip","_id","name","serialNumber","status","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/servix-cmms/frontend/src/components/equipment/EquipmentList.js"],"sourcesContent":["// frontend/src/components/equipment/EquipmentList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport api from '../../utils/api';\r\n\r\nconst EquipmentList = ({ onSelect, selectedEquipmentId }) => {\r\n  const [equipment, setEquipment] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEquipment = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError('');\r\n        \r\n        const res = await api.get('/api/equipment');\r\n        setEquipment(Array.isArray(res.data.equipment) ? res.data.equipment : []);\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || 'Failed to fetch equipment');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEquipment();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"py-2\">\r\n        <div className=\"inline-block h-4 w-4 animate-spin rounded-full border-2 border-solid border-teal-600 border-r-transparent\"></div>\r\n        <span className=\"ml-2 text-sm text-gray-600\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-2 text-sm text-red-600\">\r\n        {error}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <select\r\n      value={selectedEquipmentId || ''}\r\n      onChange={(e) => onSelect(e.target.value)}\r\n      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n      required\r\n    >\r\n      <option value=\"\">Select equipment</option>\r\n      {equipment.map(equip => (\r\n        <option key={equip._id} value={equip._id}>\r\n          {equip.name} ({equip.serialNumber}) - {equip.status}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default EquipmentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}