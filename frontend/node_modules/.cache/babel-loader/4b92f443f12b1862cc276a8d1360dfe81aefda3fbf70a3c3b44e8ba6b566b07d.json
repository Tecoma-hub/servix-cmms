{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\servix-cmms\\\\frontend\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\n// frontend/components/routing/PrivateRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  user,\n  role,\n  children\n}) => {\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If no specific role is required, allow access\n  if (!role) {\n    return children;\n  }\n\n  // Allow access if user role matches required role\n  if (user.role === role) {\n    return children;\n  }\n\n  // Special case: Engineer should have access to Technician routes\n  if (user.role === 'Engineer' && role === 'Technician') {\n    return children;\n  }\n\n  // Redirect to dashboard if not authorized\n  return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/dashboard\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","PrivateRoute","user","role","children","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/servix-cmms/frontend/src/components/routing/PrivateRoute.js"],"sourcesContent":["// frontend/components/routing/PrivateRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ user, role, children }) => {\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n  \r\n  // If no specific role is required, allow access\r\n  if (!role) {\r\n    return children;\r\n  }\r\n  \r\n  // Allow access if user role matches required role\r\n  if (user.role === role) {\r\n    return children;\r\n  }\r\n  \r\n  // Special case: Engineer should have access to Technician routes\r\n  if (user.role === 'Engineer' && role === 'Technician') {\r\n    return children;\r\n  }\r\n  \r\n  // Redirect to dashboard if not authorized\r\n  return <Navigate to=\"/dashboard\" replace />;\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EACjD,IAAI,CAACF,IAAI,EAAE;IACT,oBAAOF,OAAA,CAACF,QAAQ;MAACO,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAI,CAACP,IAAI,EAAE;IACT,OAAOC,QAAQ;EACjB;;EAEA;EACA,IAAIF,IAAI,CAACC,IAAI,KAAKA,IAAI,EAAE;IACtB,OAAOC,QAAQ;EACjB;;EAEA;EACA,IAAIF,IAAI,CAACC,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,YAAY,EAAE;IACrD,OAAOC,QAAQ;EACjB;;EAEA;EACA,oBAAOJ,OAAA,CAACF,QAAQ;IAACO,EAAE,EAAC,YAAY;IAACC,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7C,CAAC;AAACC,EAAA,GAtBIV,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}