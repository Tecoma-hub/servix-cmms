{"ast":null,"code":"// frontend/src/components/routing/PrivateRoute.js\nimport React from'react';import{Navigate,Outlet}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{user,role,children}=_ref;// If no user is logged in, redirect to login\nif(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}// If role is specified and user doesn't have the required role, redirect to dashboard\nif(role&&user.role!==role){return/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"});}// If children are provided, render them, otherwise render the Outlet (for nested routes)\nreturn children||/*#__PURE__*/_jsx(Outlet,{});};export default PrivateRoute;","map":{"version":3,"names":["React","Navigate","Outlet","jsx","_jsx","PrivateRoute","_ref","user","role","children","to"],"sources":["C:/Users/USER/Desktop/servix-cmms/frontend/src/components/routing/PrivateRoute.js"],"sourcesContent":["// frontend/src/components/routing/PrivateRoute.js\r\nimport React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ user, role, children }) => {\r\n  // If no user is logged in, redirect to login\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // If role is specified and user doesn't have the required role, redirect to dashboard\r\n  if (role && user.role !== role) {\r\n    return <Navigate to=\"/dashboard\" />;\r\n  }\r\n\r\n  // If children are provided, render them, otherwise render the Outlet (for nested routes)\r\n  return children || <Outlet />;\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAA8B,IAA7B,CAAEC,IAAI,CAAEC,IAAI,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAC5C;AACA,GAAI,CAACC,IAAI,CAAE,CACT,mBAAOH,IAAA,CAACH,QAAQ,EAACS,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA;AACA,GAAIF,IAAI,EAAID,IAAI,CAACC,IAAI,GAAKA,IAAI,CAAE,CAC9B,mBAAOJ,IAAA,CAACH,QAAQ,EAACS,EAAE,CAAC,YAAY,CAAE,CAAC,CACrC,CAEA;AACA,MAAO,CAAAD,QAAQ,eAAIL,IAAA,CAACF,MAAM,GAAE,CAAC,CAC/B,CAAC,CAED,cAAe,CAAAG,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}