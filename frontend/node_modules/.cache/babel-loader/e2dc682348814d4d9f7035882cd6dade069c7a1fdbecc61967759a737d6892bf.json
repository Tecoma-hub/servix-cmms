{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\servix-cmms\\\\frontend\\\\src\\\\components\\\\tasks\\\\TechnicianTaskForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/tasks/TechnicianTaskForm.js\nimport React, { useState } from 'react';\nimport axios from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TechnicianTaskForm = ({\n  task,\n  onSuccess\n}) => {\n  _s();\n  const [formData, setFormData] = useState(task);\n  const {\n    faultDescription,\n    comments,\n    spareParts,\n    status\n  } = formData;\n  const onChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`/tasks/${task._id}`, formData);\n      onSuccess(response.data);\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"faultDescription\",\n        children: \"Fault Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"faultDescription\",\n        name: \"faultDescription\",\n        value: faultDescription,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TechnicianTaskForm, \"ujm4gyXXyoq2SnFQ8+gdIF1CZjQ=\");\n_c = TechnicianTaskForm;\nexport default TechnicianTaskForm;\nvar _c;\n$RefreshReg$(_c, \"TechnicianTaskForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TechnicianTaskForm","task","onSuccess","_s","formData","setFormData","faultDescription","comments","spareParts","status","onChange","e","target","name","value","onSubmit","preventDefault","response","put","_id","data","error","console","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/servix-cmms/frontend/src/components/tasks/TechnicianTaskForm.js"],"sourcesContent":["// frontend/src/components/tasks/TechnicianTaskForm.js\r\nimport React, { useState } from 'react';\r\nimport axios from '../../utils/api';\r\n\r\nconst TechnicianTaskForm = ({ task, onSuccess }) => {\r\n  const [formData, setFormData] = useState(task);\r\n\r\n  const { faultDescription, comments, spareParts, status } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.put(`/tasks/${task._id}`, formData);\r\n      onSuccess(response.data);\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      {/* Task form fields */}\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"faultDescription\">Fault Description</label>\r\n        <textarea\r\n          id=\"faultDescription\"\r\n          name=\"faultDescription\"\r\n          value={faultDescription}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      {/* Other form fields... */}\r\n\r\n      <button type=\"submit\">Update Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TechnicianTaskForm;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAACK,IAAI,CAAC;EAE9C,MAAM;IAAEK,gBAAgB;IAAEC,QAAQ;IAAEC,UAAU;IAAEC;EAAO,CAAC,GAAGL,QAAQ;EAEnE,MAAMM,QAAQ,GAAGC,CAAC,IAAIN,WAAW,CAAC;IAAE,GAAGD,QAAQ;IAAE,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC;EAEnF,MAAMC,QAAQ,GAAG,MAAMJ,CAAC,IAAI;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,UAAUjB,IAAI,CAACkB,GAAG,EAAE,EAAEf,QAAQ,CAAC;MAChEF,SAAS,CAACe,QAAQ,CAACG,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEtB,OAAA;IAAMgB,QAAQ,EAAEA,QAAS;IAAAQ,QAAA,gBAEvBxB,OAAA;MAAKyB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBxB,OAAA;QAAO0B,OAAO,EAAC,kBAAkB;QAAAF,QAAA,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3D9B,OAAA;QACE+B,EAAE,EAAC,kBAAkB;QACrBjB,IAAI,EAAC,kBAAkB;QACvBC,KAAK,EAAER,gBAAiB;QACxBI,QAAQ,EAAEA;MAAS;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN9B,OAAA;MAAQgC,IAAI,EAAC,QAAQ;MAAAR,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAAC1B,EAAA,CAnCIH,kBAAkB;AAAAgC,EAAA,GAAlBhC,kBAAkB;AAqCxB,eAAeA,kBAAkB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}