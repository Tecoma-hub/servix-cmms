{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\servix-cmms\\\\frontend\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/routing/PrivateRoute.js\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  user,\n  role\n}) => {\n  _s();\n  const location = useLocation();\n\n  // If no user is logged in, redirect to login with the current path saved\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location.pathname\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If role-based restriction exists\n  if (role && user.role !== role) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Otherwise, render the protected component\n  return children;\n};\n_s(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","jsxDEV","_jsxDEV","PrivateRoute","children","user","role","_s","location","to","state","from","pathname","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/servix-cmms/frontend/src/components/routing/PrivateRoute.js"],"sourcesContent":["// frontend/src/components/routing/PrivateRoute.js\r\nimport React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ children, user, role }) => {\r\n  const location = useLocation();\r\n\r\n  // If no user is logged in, redirect to login with the current path saved\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" state={{ from: location.pathname }} replace />;\r\n  }\r\n\r\n  // If role-based restriction exists\r\n  if (role && user.role !== role) {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  // Otherwise, render the protected component\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAI,CAACK,IAAI,EAAE;IACT,oBAAOH,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEH,QAAQ,CAACI;MAAS,CAAE;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7E;;EAEA;EACA,IAAIX,IAAI,IAAID,IAAI,CAACC,IAAI,KAAKA,IAAI,EAAE;IAC9B,oBAAOJ,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,YAAY;MAACI,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;;EAEA;EACA,OAAOb,QAAQ;AACjB,CAAC;AAACG,EAAA,CAfIJ,YAAY;EAAA,QACCH,WAAW;AAAA;AAAAkB,EAAA,GADxBf,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}